user  www-data;
worker_processes  8;

error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

pid        logs/nginx.pid;
		
events {
    worker_connections  20000;
}

worker_rlimit_nofile    40000;

http {
    include       mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    #gzip  on;

	map $http_user_agent $is_desktop {
		default 0;
		~*linux.*android|windows\s+(?:ce|phone) 0; # exceptions to the rule
		~*spider|crawl|slurp|bot 1; # bots
		~*windows|linux|os\s+x\s*[\d\._]+|solaris|bsd 1; # OSes
	}
		 
	## Revert the logic.
	map $is_desktop $is_mobile {
		1 0;
		0 1;
	}

	server{
        listen       80;
		server_name nouradio.mu;
		return 301 http://www.nouradio.mu$request_uri;
	}
	
    server {
        listen       80;
        server_name  www.nouradio.mu;

        #charset koi8-r;

        access_log  logs/nouradio.access.log  main;

		#Check if desktop or HLS-compatible device
		set $hls_compatible_smartdevice 0;

		if ($http_user_agent ~* "android|(android).+mobile|ip(hone|od)|ipad|playbook|silk|windows phone|bb10.+mobile") {
		  set $hls_compatible_smartdevice 1;
		}
		
		if ($is_desktop = 0) {
			set $test  G;
		}
		
		if ($hls_compatible_smartdevice = 0) {
			set $test "${test}O";
		}
	
        location / {
            root   html;
            index  index.html index.htm;

			if ($test = GO) {
				rewrite ^/$	/index_simple.html last;
				break;
			}
        }

        location /hls {
            # Serve HLS fragments
            types {
                application/vnd.apple.mpegurl m3u8;
                video/mp2t ts;
            }
            root /tmp;
            add_header Cache-Control no-cache;
        }
		
        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }
    }

   server {
        listen      8080;

        location /stat {
            rtmp_stat all;
            rtmp_stat_stylesheet stat.xsl;
        }

		location /nginx_status{
			stub_status on;
			access_log   off;
		}
    }

}

rtmp {
    server {
        listen 1935;
        chunk_size 4000;

        application live {        
            live on;
            allow publish 127.0.0.1;
            deny publish all;
			hls on;
			hls_path /tmp/hls;
        }
    }
}
